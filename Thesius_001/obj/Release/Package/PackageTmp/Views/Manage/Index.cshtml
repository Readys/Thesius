@model Thesius_001.Models.IndexViewModel
@{
    ViewBag.Title = "Управление профилем";
}

<h4>@ViewBag.Title.</h4>

<p class="text-success">@ViewBag.StatusMessage</p>
<div>
    <h6>Изменение настроек</h6>
    <hr />
    <dl id="profile" class="dl-horizontal">
        <dt>Пароль:</dt>
        <dd>
            [
            @if (Model.HasPassword)
            {
                @Html.ActionLink("Изменить пароль", "ChangePassword")
            }
            else
            {
                @Html.ActionLink("Create", "SetPassword") 
            }
            ]
        </dd>
        <dt>
            Ник
        </dt>
        <dd>
            <input class="form-control form-control-sm" type="text" v-model="NickName" >
            <button @@click="ChangeNickName()" class="btn btn-sm btn-success">Изменить</button>
        </dd>
        @*<dt>External Logins:</dt>
        <dd>
            @Model.Logins.Count [
            @Html.ActionLink("Manage", "ManageLogins") ]
        </dd>*@
        @*
            Phone Numbers can used as a second factor of verification in a two-factor authentication system.

             See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support two-factor authentication using SMS.

             Uncomment the following block after you have set up two-factor authentication
        *@
        @*
            <dt>Phone Number:</dt>
            <dd>
                @(Model.PhoneNumber ?? "None")
                @if (Model.PhoneNumber != null)
                {
                    <br />
                    <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                    using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
                    }
                }
                else
                {
                    <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
                }
            </dd>
        *@
        @*<dt>Two-Factor Authentication:</dt>
        <dd>
            <p>
                There are no two-factor authentication providers configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support two-factor authentication.
            </p>
            @if (Model.TwoFactor)
                {
                    using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Enabled
                        <input type="submit" value="Disable" class="btn btn-link" />
                        </text>
                    }
                }
                else
                {
                    using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Disabled
                        <input type="submit" value="Enable" class="btn btn-link" />
                        </text>
                    }
                }
        </dd>*@
    </dl>
</div>
<script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js" integrity="sha512-bZS47S7sPOxkjU/4Bt0zrhEtWx0y0CRkhEp8IckzK+ltifIIE9EMIMTuT/mEzoIMewUINruDBIR/jJnbguonqQ==" crossorigin="anonymous"></script>
<script>
    new Vue({
        el: '#profile',
        data: {
            NickName: "",
        },
        methods: {
            ChangeNickName: function () {
                axios.post('/Manage/SetNickName/', {
                    nickname: this.NickName,
                }, {
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    }).then(response => {
                        if (response.data == "Ok") {
                            alert("Никнейм изменен!");
                        }
                    }).catch(error => {
                        alert("Error");
                    });
            },
        },
        mounted: function () {
            axios
                .get('/JSON/GetNickName/')
                .then(response => (this.NickName = response.data));
        }
    });
</script>

